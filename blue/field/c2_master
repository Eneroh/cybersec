=== c2_master - sentinel focus ===

--- alert associated ---
Network protection blocked a potential c2 connection on one endpoint

--- tables ---
1. DeviceNetworkEvents

--- items required for procedure ---
> Sandboxing tool: Windows sandbox, urlscan.io
> Smartphone/home network
> MS Defender
> MS Sentinel
> IP information gathering tool: abuseipdb, virustotal
> IP VPN proxy checker: ip2proxy.com, ipinfo.io

--- procedure ---
1. Gather relevant information
Reviewing the defender alert, seek and note relevant information.
Device name, ip address, links to pages, services associated, parent processes

2. Deeper dive
Selecting the alert will provide more information tied to this alert.

But note it is still extremely vital to continue gathering information at this phase.

3. Investigation phase
Review the information collected, research the user associated with machine via checking devices in Microsoft Defender.

Review the user's sign in logs, devices registered.
Make sure there's been no compromise sighted for user.

Review the ip/domain in osint tools, determine if the item is considered malicious/suspicious.

4. Review the device's timeline
Utilizing the information collected from the alert, the machine/device affected.

Gather this information.

Method 1:
Visit the assets tab in the alert itself and then select the device associated and then open the device page.

Method 2:
Place the device name into the MS Defender search. Within here, select the relevant device.

Visit the timeline tab and input the search field the relevant ip/domain associated with the c2 activity.

Ensure that the activity is blocked throughout, however still record the information to provide to the client.

From here you can perform a "hunt for related events", select one of the blocked events and then look for "Hunt for related events" in the sidebar menu.

5. Utilization of Microsoft Defender Advanced Hunting
You will be presented with an automated query where you will need to understand what events transpired for the user to visit the suspicious link.

Look for domains that appear suspicious, record them, place them into osint tools and make your determination.

Once your determination is made, a further deep-dive will be necessary.

6. Sandbox the associated link
At this phase it is important to take the associated link and review the communication to the offending url.

Using an osint tool: urlscan.io or windows sandbox, view the offendng url and gather the findings.

Method 1:
Review the HTTP transactions in URLscan.io
[works in corporate network]

Method 2:
View the html source code within a sandboxed browser
[works in home network]

Method 3:
Review the site via developer options

Look for relevant javascript files that are tied to the offending ip/domain. Review the sources

7. Present findings
Once you have made your determination

Present your findings in a clear and concise manner.

With IPs, domains and urls to block.

You have successfully performed a c2 investigation to the level of a master.

--- useful kql queries ---
1.
DeviceNetworkEvents
| where Timestamp between (ago(5h) .. ago(3h))
| where DeviceName == "<device.internaldomain>" //and RemoteIP == "<IP>"
| project Timestamp, RemoteUrl, RemoteIP

2.
let selectedTimestamp = datetime(YYYY-MM-DDHH:mm:ssz);
search in (DeviceNetworkEvents)
Timestamp between ((selectedTimestamp - 30m) .. (selectedTimestamp + 30m))
and DeviceName == "<Device>"
| sort by Timestamp desc
| extend Relevance = iff(Timestamp == selectedTimestamp, "Selected event", iff(Timestamp < selectedTimestamp, "Earlier event","Later event"))
| project-reorder Relevance

3. 
let selectedTimestamp = datetime(YYYY-MM-DDHH:mm:ssz);
search in (DeviceNetworkEvents)
Timestamp between ((selectedTimestamp - 30m) .. (selectedTimestamp + 30m))
and DeviceName == "<Device>"
| sort by Timestamp desc
| extend Relevance = iff(Timestamp == selectedTimestamp, "Selected event", iff(Timestamp < selectedTimestamp, "Earlier event","Later event"))
| project-reorder Relevance, RemoteUrl, RemoteIP

--- remediation ---
1. Network intrusion prevention systems can be utilized to mitigate this activity.
2. Restricting web based content through web proxies. Preventing the use of unauthorised external services.
3. Continued monitoring of network traffic
4. Block the associated traffic, domains, urls, ips
